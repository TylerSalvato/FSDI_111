a class is to an object as a blueprint is to a house

# Variables that belong to a class are called (class) attributes
# Functions that belong to a class are called "methods"


export FLASK_APP=app/routes.py
export FLASK_ENV=development
flask run

sh run_local.sh

cd ~/Code/SDGKU/FSDI_111
pwd
source venv/bin/activate
deactivate

# Mini Challenge 1

## Create and populate a database table for books

### Acceptance Criteria
1. Create a database table for books that keeps track of, at a minimum, the following:
1.1. Title
1.2. Author
1.3. Edition
1.4. Editorial
1.5. ISBN
2. In addition to the fields above, your table must have an id column, which should act as the primary key for the table.
3. Insert 3 books into your database table, populating all the fields as needed.
4. Update the second book's title to "Clean Code" and its author to "Robert C. Martin"
5. Delete the last book.
6. Display all remaining rows with a scan operation.

## Note
You should prepare to share your screen and show how you executed all commands and queries.

cmd prmpt


# start server
npm start

# install
npm install react-router-dom

git status

git remote rm origin

git init

git --version

git remote add origin

git add .

git commit -m "Message"

git push -u origin main

git config --global user.name

git config --global user.email

# initialize the repo
git initialize

# set the url for the remote
git remote add origin <URL>

# added the files
git add .

# created a commit
git commit -m "MESSAGE HERE"

# push 1st time
git push -u origin master


----- FUTURE Uploads

git add .
git commit -m "SOMETHING"
git push

stop server before commit

npm install -s axios

pwd (print working directory)

mkdir (make directory)

~ (home directory)

# tool to create virtual environms
python3 -m pip install virtualenv
# create virtual environment
python3 -m venv venv 



# activate venv
source venv/bin/activate


# deactivate
deactivate


# clear the terminal
clear


# install flask
python3 -m pip install flask


# create project
#type the code




# run the server
python3 server.py

Flask pymongo
To read and write data to a mongo db


python3 -m pip install "pymongo[srv]" certifi

open . (finder)


export FLASK_APP=
export FLASK_ENV=
flask run

mkdir app 
touch app/__init__.py 
touch app/routes.py
touch run_local.sh

code . 

https://git-scm.com/

man git



